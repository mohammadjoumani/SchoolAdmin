package com.example.schooladmin.query;import android.content.Context;import android.content.Intent;import android.os.AsyncTask;import android.util.Log;import com.example.schooladmin.connectdb.ConnectDB;import com.example.schooladmin.model.Student;import com.example.schooladmin.model.Subject;import com.example.schooladmin.model.Teacher;import java.sql.Connection;import java.sql.ResultSet;import java.sql.ResultSetMetaData;import java.sql.Statement;import java.util.ArrayList;import java.util.List;public class TeacherQuery {    List<Teacher> teachers = new ArrayList<>();    private List<Subject> subjects = new ArrayList<>();    private boolean isTrue = false;    private Context context;    public TeacherQuery(Context context) {        this.context = context;    }    ///region Teacher    public void setAllTeacher(List<Teacher> teachers) {        this.teachers = teachers;    }    public List<Teacher> getAllTeacher() {        return teachers;    }    public void callTaskGetAllTeacher() {        new TaskGetAllTeacher().execute( "" );    }    //endregion    ///region Subject    public void setAllSubject(List<Subject> subjects) {        this.subjects = subjects;    }    public List<Subject> getAllSubject() {        return subjects;    }    public void callTaskGetAllSubject() {        new TaskGetAllSubject().execute( "" );    }    //endregion    ///region Insert Teacher    public void setStateInsertTeacher(boolean isSuccess) {        this.isTrue = isSuccess;    }    public boolean getStateInsertTeacher() {        return isTrue;    }    public void callTaskInsertTeacher(Teacher teacher) {        new TaskInsertTeacher( teacher ).execute( "" );    }    //endregion    //for get All Teacher    private class TaskGetAllTeacher extends AsyncTask<String, String, List<Teacher>> {        String state = "";        boolean isSuccess = false;        @Override        protected List<Teacher> doInBackground(String... strings) {            List<Teacher> teacherList = new ArrayList<>();            try {                ConnectDB connectDB = new ConnectDB();                Connection connection = connectDB.CONN();                if (connection == null) {                } else {                    String query = "SELECT teacher.id , teacher.name  ,subject.name\n" +                            "FROM teacher , subject \n" +                            "WHERE teacher.subjectID=subject.id";                    Statement stmt = connection.createStatement();                    ResultSet resultSet = stmt.executeQuery( query );                    ResultSetMetaData resultSetMetaData = resultSet.getMetaData();                    while (resultSet.next()) {                        teacherList.add( new Teacher( resultSet.getInt( 1 ),                                resultSet.getString( 2 ),                                resultSet.getString( 3 ) ) );                    }                    isSuccess = true;                }            } catch (Exception ex) {                isSuccess = false;                state = "Exceptions" + ex;            }            return teacherList;        }        @Override        protected void onPostExecute(List<Teacher> teachers) {            Intent intent = new Intent( "teacherList" );            context.sendBroadcast( intent );            if (isSuccess) {                setAllTeacher( teachers );            }        }    }    //for get All Subject    private class TaskGetAllSubject extends AsyncTask<String, String, List<Subject>> {        String state = "";        boolean isSuccess = false;        @Override        protected List<Subject> doInBackground(String... strings) {            List<Subject> subjectList = new ArrayList<>();            try {                ConnectDB connectDB = new ConnectDB();                Connection connection = connectDB.CONN();                if (connection == null) {                } else {                    String query = "SELECT id , name from subject";                    Statement stmt = connection.createStatement();                    ResultSet resultSet = stmt.executeQuery( query );                    ResultSetMetaData resultSetMetaData = resultSet.getMetaData();                    while (resultSet.next()) {                        subjectList.add( new Subject( resultSet.getInt( 1 ),                                resultSet.getString( 2 ) ) );                    }                    Log.d( "sizeListQ", subjectList.size() + "" );                    isSuccess = true;                }            } catch (Exception ex) {                isSuccess = false;                state = "Exceptions" + ex;            }            return subjectList;        }        @Override        protected void onPostExecute(List<Subject> subjects) {            Intent intent = new Intent( "subjectList" );            context.sendBroadcast( intent );            if (isSuccess) {                setAllSubject( subjects );            }        }    }    //for Add Teacher    public class TaskInsertTeacher extends AsyncTask<String, String, String> {        int idTeacher;        boolean isSuccess = false;        String state = "";        Teacher teacher;        public TaskInsertTeacher(Teacher teacher) {            this.teacher = teacher;        }        @Override        protected String doInBackground(String... strings) {            try {                ConnectDB connectDB = new ConnectDB();                Connection connection = connectDB.CONN();                if (connection == null) {                } else {                    String queryUserID = "select Max(id) from teacher";                    Statement stmt1 = connection.createStatement();                    ResultSet resultSet = stmt1.executeQuery( queryUserID );                    ResultSetMetaData resultSetMetaData = resultSet.getMetaData();                    while (resultSet.next()) {                        idTeacher = Integer.parseInt( resultSet.getString( 1 ) ) + 1;                        Log.d( "idTeacher", idTeacher + "" );                    }                    String query = "insert into teacher values('" + idTeacher + "', '" +                            teacher.getName() + "','" + teacher.getPassword() + "'," +                            "'" + teacher.getSubjectID() + "')";                    Statement stmt = connection.createStatement();                    stmt.executeUpdate( query );                    isSuccess = true;                }            } catch (Exception ex) {                isSuccess = false;                state = "Exceptions" + ex;            }            return state;        }        @Override        protected void onPostExecute(String s) {            Intent intent = new Intent( "stateInsertTeacher" );            context.sendBroadcast( intent );            if (isSuccess) {                setStateInsertTeacher( isSuccess );            }        }    }}