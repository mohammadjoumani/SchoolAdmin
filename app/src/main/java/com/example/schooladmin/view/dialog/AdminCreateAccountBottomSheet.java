package com.example.schooladmin.view.dialog;import android.app.ProgressDialog;import android.content.Intent;import android.content.SharedPreferences;import android.os.AsyncTask;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.EditText;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.fragment.app.DialogFragment;import com.example.schooladmin.R;import com.example.schooladmin.connectdb.ConnectDB;import com.example.schooladmin.view.activity.HomeActivity;import com.example.schooladmin.view.activity.MainActivity;import com.google.android.material.bottomsheet.BottomSheetDialogFragment;import com.google.android.material.snackbar.Snackbar;import java.sql.Connection;import java.sql.ResultSet;import java.sql.ResultSetMetaData;import java.sql.Statement;import static android.content.Context.MODE_PRIVATE;public class AdminCreateAccountBottomSheet extends BottomSheetDialogFragment {    private EditText edtBottomSheetName;    private EditText edtBottomSheetPassword;    private Button btnBottomSheetSingUp;    private ProgressDialog progressDialog;    private ConnectDB connectDB;    private SharedPreferences sharedPreferences;    @Override    public void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate( savedInstanceState );        setStyle( DialogFragment.STYLE_NORMAL, R.style.DialogStyle );    }    @Nullable    @Override    public View onCreateView(@NonNull LayoutInflater inflater,                             @Nullable ViewGroup container,                             @Nullable Bundle savedInstanceState) {        View view = inflater.inflate( R.layout.bottom_sheet_admin_create_account, container );        progressDialog = new ProgressDialog( getContext() );        connectDB = new ConnectDB();        edtBottomSheetName = view.findViewById( R.id.edtBottomSheetName );        edtBottomSheetPassword = view.findViewById( R.id.edtBottomSheetPassword );        btnBottomSheetSingUp = view.findViewById( R.id.btnBottomSheetSingUp );        btnBottomSheetSingUp.setOnClickListener( new View.OnClickListener() {            @Override            public void onClick(View view) {                String name = edtBottomSheetName.getText().toString().trim();                String password = edtBottomSheetPassword.getText().toString().trim();                if (name.equals( "" ) || password.equals( "" )) {                    Toast.makeText( getActivity(), "Please fill all record and agine", Toast.LENGTH_SHORT ).show();                    return;                }                SingUp();            }        } );        return view;    }    public void SingUp() {        new TaskInsertAdmin().execute( "" );    }    //region createAccount    public class TaskInsertAdmin extends AsyncTask<String, String, Integer> {        String namestr = edtBottomSheetName.getText().toString();        String passwordstr = edtBottomSheetPassword.getText().toString();        int id;        String state = "";        boolean isSuccess = false;        @Override        protected void onPreExecute() {            progressDialog.setMessage( "Loading..." );            progressDialog.show();        }        @Override        protected Integer doInBackground(String... strings) {            try {                Connection connection = connectDB.CONN();                if (connection == null) {                    Snackbar snackbar = Snackbar.make( getActivity().findViewById( R.id.layoutSingIn ),                            "Please check your internet connection", Snackbar.LENGTH_LONG );                    snackbar.setAction( "RETRY", new View.OnClickListener() {                        @Override                        public void onClick(View view) {                        }                    } );                    snackbar.show();                } else {                    String queryUserID = "select Max(id) from Admin";                    Statement stmt1 = connection.createStatement();                    ResultSet resultSet = stmt1.executeQuery( queryUserID );                    ResultSetMetaData resultSetMetaData = resultSet.getMetaData();                    while (resultSet.next()) {                        id = Integer.parseInt( resultSet.getString( 1 ) ) + 1;                    }                    String query = "insert into admin values('" + id + "', '" + namestr + "','" + passwordstr + "')";                    Statement stmt = connection.createStatement();                    stmt.executeUpdate( query );                    state = "Register successfull";                    isSuccess = true;                }            } catch (Exception ex) {                isSuccess = false;                state = "Exceptions" + ex;            }            return id;        }        @Override        protected void onPostExecute(Integer id) {            if (isSuccess) {                sharedPreferences = ((MainActivity) getActivity()).getSharedPreferences( "remeberME", MODE_PRIVATE );                SharedPreferences.Editor editor = sharedPreferences.edit();                editor.putBoolean( "remeberME", true );                editor.commit();                sharedPreferences = ((MainActivity) getActivity()).getSharedPreferences( "adminID", MODE_PRIVATE );                SharedPreferences.Editor editorID = sharedPreferences.edit();                editorID.putInt( "adminID", id );                editorID.commit();                startActivity( new Intent( getActivity(), HomeActivity.class ) );                ((MainActivity) getActivity()).finshActivity();            }            progressDialog.hide();        }    }    ///endregion}