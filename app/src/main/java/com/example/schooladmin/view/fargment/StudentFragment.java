package com.example.schooladmin.view.fargment;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.content.IntentFilter;import android.os.Bundle;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.ImageButton;import android.widget.ImageView;import android.widget.ProgressBar;import android.widget.Spinner;import androidx.annotation.NonNull;import androidx.fragment.app.Fragment;import androidx.recyclerview.widget.LinearLayoutManager;import androidx.recyclerview.widget.RecyclerView;import com.example.schooladmin.R;import com.example.schooladmin.connectdb.ConnectDB;import com.example.schooladmin.model.ClassSchool;import com.example.schooladmin.model.Student;import com.example.schooladmin.query.StudentQuery;import com.example.schooladmin.view.adapter.ClassSpinnerAdapter;import com.example.schooladmin.view.adapter.StudentRecyclerAdapter;import com.example.schooladmin.view.dialog.AddStudentBottomSheet;import com.google.android.material.floatingactionbutton.FloatingActionButton;import java.util.ArrayList;import java.util.List;public class StudentFragment extends Fragment {    private ConnectDB connectDB;    private ImageButton btnAddClass;    private Spinner spinnerClass;    private List<ClassSchool> classes;    private ClassSpinnerAdapter classSpinnerAdapter;    private ImageView imgFragmentStudentEmpty;    private ProgressBar progressBarFragmentStudentLoad;    private FloatingActionButton floatingActionFragmentStudentAddStudenet;    private RecyclerView recyclerFragmentStudent;    private RecyclerView.LayoutManager layoutManagerStudent;    private List<Student> students;    private StudentRecyclerAdapter studentRecyclerAdapter;    private StudentQuery studentQuery;    public View onCreateView(@NonNull LayoutInflater inflater,                             ViewGroup container,                             Bundle savedInstanceState) {        View view = inflater.inflate( R.layout.fragment_student, container, false );        //for connecttion        connectDB = new ConnectDB();        //for get All query in this Fragment        studentQuery = new StudentQuery( getContext() );        //Spinner For class        btnAddClass = view.findViewById( R.id.btnAddClass );        spinnerClass = view.findViewById( R.id.spinnerClass );        classes = new ArrayList<>();        studentQuery.callTaskGetClass();        classSpinnerAdapter = new ClassSpinnerAdapter( classes, getActivity() );        spinnerClass.setAdapter( classSpinnerAdapter );        IntentFilter intentFilterClass = new IntentFilter( "classList" );        requireActivity().registerReceiver( boBroadcastReceiverAllClass, intentFilterClass );        spinnerClass.setOnItemSelectedListener( new AdapterView.OnItemSelectedListener() {            @Override            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {                progressBarFragmentStudentLoad.setVisibility( View.VISIBLE );                studentQuery.callTaskSelectStudentByClassName( classes.get( i ).getId() );                IntentFilter intentFilterStudentByClass = new IntentFilter( "listStudentByClass" );                requireActivity().registerReceiver( broadcastReceiverStudentByClass, intentFilterStudentByClass );            }            @Override            public void onNothingSelected(AdapterView<?> adapterView) {            }        } );        btnAddClass.setOnClickListener( new View.OnClickListener() {            @Override            public void onClick(View view) {            }        } );        //recycler for show studnet        imgFragmentStudentEmpty = view.findViewById( R.id.imgFragmentStudentEmpty );        progressBarFragmentStudentLoad = view.findViewById( R.id.progressBarFragmentStudentLoad );        recyclerFragmentStudent = view.findViewById( R.id.recyclerFragmentStudent );        floatingActionFragmentStudentAddStudenet = view.findViewById( R.id.floatingActionFragmentStudentAddStudenet );        recyclerFragmentStudent.setHasFixedSize( true );        layoutManagerStudent = new LinearLayoutManager( getActivity(), RecyclerView.VERTICAL, false );        recyclerFragmentStudent.setLayoutManager( layoutManagerStudent );        students = new ArrayList<>();        studentQuery.callTaskGetAllStudent();        studentRecyclerAdapter = new StudentRecyclerAdapter( students, getActivity() );        recyclerFragmentStudent.setAdapter( studentRecyclerAdapter );//        progressBarFragmentStudentLoad.setVisibility( View.VISIBLE );//        IntentFilter intentFilter = new IntentFilter( "studentList" );//        requireActivity().registerReceiver( broadcastReceiverAllStudents, intentFilter );        floatingActionFragmentStudentAddStudenet.setOnClickListener( new View.OnClickListener() {            @Override            public void onClick(View view) {                AddStudentBottomSheet addStudentBottomSheet = new AddStudentBottomSheet();                addStudentBottomSheet.show( getActivity().getSupportFragmentManager(), "AddStudentBottomSheet" );            }        } );        return view;    }    //for get All Student    BroadcastReceiver broadcastReceiverAllStudents = new BroadcastReceiver() {        @Override        public void onReceive(Context context, Intent intent) {            if (connectDB.CONN() == null) {                imgFragmentStudentEmpty.setImageResource( R.drawable.ic_disconneect );                imgFragmentStudentEmpty.setVisibility( View.VISIBLE );                progressBarFragmentStudentLoad.setVisibility( View.GONE );                return;            }            students = studentQuery.getAllStudents();            if (students.size() == 0) {                imgFragmentStudentEmpty.setVisibility( View.VISIBLE );            } else {                imgFragmentStudentEmpty.setVisibility( View.GONE );            }            studentRecyclerAdapter.setDate( students );            progressBarFragmentStudentLoad.setVisibility( View.GONE );        }    };    //for get All Class    BroadcastReceiver boBroadcastReceiverAllClass = new BroadcastReceiver() {        @Override        public void onReceive(Context context, Intent intent) {            classes = studentQuery.getClasses();            classSpinnerAdapter.setData( classes );        }    };    //for get student By class    BroadcastReceiver broadcastReceiverStudentByClass = new BroadcastReceiver() {        @Override        public void onReceive(Context context, Intent intent) {            if (connectDB.CONN() == null) {                imgFragmentStudentEmpty.setImageResource( R.drawable.ic_disconneect );                imgFragmentStudentEmpty.setVisibility( View.VISIBLE );                progressBarFragmentStudentLoad.setVisibility( View.GONE );                return;            }            students = studentQuery.getStudentsByClass();            if (students.size() == 0) {                imgFragmentStudentEmpty.setVisibility( View.VISIBLE );            } else {                imgFragmentStudentEmpty.setVisibility( View.GONE );            }            studentRecyclerAdapter.setDate( students );            progressBarFragmentStudentLoad.setVisibility( View.GONE );        }    };}