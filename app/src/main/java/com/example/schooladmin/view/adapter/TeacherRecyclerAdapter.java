package com.example.schooladmin.view.adapter;import android.content.Context;import android.view.LayoutInflater;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import android.widget.PopupMenu;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import com.example.schooladmin.R;import com.example.schooladmin.model.Teacher;import com.example.schooladmin.view.adapter.viewholder.TeacherViewHolder;import java.util.List;public class TeacherRecyclerAdapter extends RecyclerView.Adapter<TeacherViewHolder> {    private List<Teacher> teachers;    private Context context;    public TeacherRecyclerAdapter(List<Teacher> teachers, Context context) {        this.teachers = teachers;        this.context = context;    }    @NonNull    @Override    public TeacherViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        View view = LayoutInflater.from( context ).inflate( R.layout.item_recycler_teacher, parent, false );        return new TeacherViewHolder( view );    }    @Override    public void onBindViewHolder(@NonNull TeacherViewHolder holder, int position) {        holder.getTxtRecyclerTeacherName().setText( teachers.get( holder.getAdapterPosition() ).getName() );        holder.getTxtRecyclerTeacherSubjectName().setText( teachers.get( holder.getAdapterPosition() ).getSubjectName() );        holder.getView().setOnLongClickListener( new View.OnLongClickListener() {            @Override            public boolean onLongClick(View view) {                PopupMenu popupMenu = new PopupMenu( context, holder.getView() );                popupMenu.inflate( R.menu.option_menu );                popupMenu.setOnMenuItemClickListener( new PopupMenu.OnMenuItemClickListener() {                    @Override                    public boolean onMenuItemClick(MenuItem menuItem) {                        switch (menuItem.getItemId()) {                            case R.id.deleteItem:                                break;                            case R.id.updateItem:                                break;                        }                        return false;                    }                } );                popupMenu.show();                return true;            }        } );    }    @Override    public int getItemCount() {        return teachers.size();    }    public void setDate(List<Teacher> teachers) {        this.teachers = teachers;        notifyDataSetChanged();    }}